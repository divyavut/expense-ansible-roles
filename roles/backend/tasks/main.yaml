- name: Install mysql python library
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9

- name: disable default nodejs 
  ansible.builtin.command: 
    dnf module disable nodejs:18 -y

- name: enable default nodejs 
  ansible.builtin.command: 
    dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package: 
    name: "{{ item }}"
    state: present
  loop: 
  - nodejs 
  - mysql

- name: Create a user expense
  ansible.builtin.user: # default error handling and idempotency
    name: expense  

- name: import task from common role to "{{ component }}" role
  tags: 
  - deployment
  ansible.builtin.import_role: 
    name: common # role name 
    tasks_from: app-pre-req 


- name: install dependencies
  tags: 
  - deployment
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: Copy backend service to dest # copy will only works for files without variables
  ansible.builtin.template: # template used for files with variables
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service 

- name: connect mysql and import mysql data
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql 
    name: all
    state: import 
    
- name:  daemon reload and restart backend service
  tags: 
  - deployment
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes 
    name: backend 
